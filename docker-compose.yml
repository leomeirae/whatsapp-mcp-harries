version: '3.8'

services:
  whatsapp-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: whatsapp-mcp-server
    ports:
      - "9090:9090"  # Go bridge API
    volumes:
      # Persist WhatsApp data and session
      - whatsapp_data:/app/whatsapp-bridge/store
      # Mount for media files (optional)
      - ./media:/app/media:ro
    environment:
      # Configuração básica
      - TZ=UTC
      - NODE_ENV=production
      
      # Configuração do WhatsApp Bridge
      - WHATSAPP_BRIDGE_PORT=9090
      - WHATSAPP_BRIDGE_HOST=localhost
      - WHATSAPP_API_BASE_URL=http://localhost:9090/api
      
      # Configuração de logs
      - LOG_LEVEL=info
      - ENABLE_CONSOLE_LOGGING=true
      
      # Configuração de segurança
      - ENABLE_RATE_LIMITING=true
      - RATE_LIMIT_REQUESTS_PER_MINUTE=60
      - ENABLE_CORS=true
      - CORS_ALLOWED_ORIGINS=*
      
      # Configuração de mídia
      - MAX_MEDIA_SIZE=104857600
      - MEDIA_STORAGE_PATH=/app/media
      
      # Configuração de performance
      - MAX_CONCURRENT_CONNECTIONS=100
      - REQUEST_TIMEOUT=30
      - HEALTH_CHECK_INTERVAL=30
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - whatsapp-network

  # Optional: Add a reverse proxy for better security
  nginx:
    image: nginx:alpine
    container_name: whatsapp-mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # If using SSL
    depends_on:
      - whatsapp-mcp-server
    restart: unless-stopped
    networks:
      - whatsapp-network
    profiles:
      - proxy  # Only start with --profile proxy

volumes:
  whatsapp_data:
    driver: local

networks:
  whatsapp-network:
    driver: bridge 